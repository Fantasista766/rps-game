/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  RockPaperScissors,
  RockPaperScissorsInterface,
} from "../RockPaperScissors";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum RockPaperScissors.Move",
        name: "playerMove",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum RockPaperScissors.Move",
        name: "botMove",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "GameResult",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "bot",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum RockPaperScissors.Move",
        name: "_playerMove",
        type: "uint8",
      },
      {
        internalType: "enum RockPaperScissors.Move",
        name: "_botMove",
        type: "uint8",
      },
    ],
    name: "play",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "player",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061079c806100616000396000f3fe608060405234801561001057600080fd5b506004361061005b5760003560e01c806301ffc9a71461005e57806310814c371461008e57806348db5f89146100ac578063dfbf53ae146100ca578063e802c36f146100e85761005c565b5b005b61007860048036038101906100739190610525565b610104565b604051610085919061056d565b60405180910390f35b61009661016e565b6040516100a391906105c9565b60405180910390f35b6100b4610194565b6040516100c191906105c9565b60405180910390f35b6100d26101b8565b6040516100df91906105c9565b60405180910390f35b61010260048036038101906100fd9190610609565b6101de565b005b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361026e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610265906106a6565b60405180910390fd5b6102788282610345565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbf326c96d6b2780f48c481ff6f5a2109b30da31f3bfe88c0e537db41097532e7848460405161033992919061073d565b60405180910390a35050565b600081600281111561035a576103596106c6565b5b83600281111561036d5761036c6106c6565b5b0361037b57600090506104c2565b6000600281111561038f5761038e6106c6565b5b8360028111156103a2576103a16106c6565b5b1480156103d257506002808111156103bd576103bc6106c6565b5b8260028111156103d0576103cf6106c6565b5b145b8061043057506002808111156103eb576103ea6106c6565b5b8360028111156103fe576103fd6106c6565b5b14801561042f57506001600281111561041a576104196106c6565b5b82600281111561042d5761042c6106c6565b5b145b5b8061048f57506001600281111561044a576104496106c6565b5b83600281111561045d5761045c6106c6565b5b14801561048e575060006002811115610479576104786106c6565b5b82600281111561048c5761048b6106c6565b5b145b5b1561049c573390506104c2565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b92915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610502816104cd565b811461050d57600080fd5b50565b60008135905061051f816104f9565b92915050565b60006020828403121561053b5761053a6104c8565b5b600061054984828501610510565b91505092915050565b60008115159050919050565b61056781610552565b82525050565b6000602082019050610582600083018461055e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105b382610588565b9050919050565b6105c3816105a8565b82525050565b60006020820190506105de60008301846105ba565b92915050565b600381106105f157600080fd5b50565b600081359050610603816105e4565b92915050565b600080604083850312156106205761061f6104c8565b5b600061062e858286016105f4565b925050602061063f858286016105f4565b9150509250929050565b600082825260208201905092915050565b7f426f742063616e6e6f7420706c6179207468652067616d650000000000000000600082015250565b6000610690601883610649565b915061069b8261065a565b602082019050919050565b600060208201905081810360008301526106bf81610683565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610706576107056106c6565b5b50565b6000819050610717826106f5565b919050565b600061072782610709565b9050919050565b6107378161071c565b82525050565b6000604082019050610752600083018561072e565b61075f602083018461072e565b939250505056fea2646970667358221220764989cd4b689361bba57c33bea29826c65e8305d9fee95222db90b5b0b89c6b64736f6c63430008180033";

type RockPaperScissorsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RockPaperScissorsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RockPaperScissors__factory extends ContractFactory {
  constructor(...args: RockPaperScissorsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RockPaperScissors & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RockPaperScissors__factory {
    return super.connect(runner) as RockPaperScissors__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RockPaperScissorsInterface {
    return new Interface(_abi) as RockPaperScissorsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RockPaperScissors {
    return new Contract(address, _abi, runner) as unknown as RockPaperScissors;
  }
}
